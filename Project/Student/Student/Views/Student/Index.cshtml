@model Student.Models.StudentModel

@{
    ViewBag.Title = "Student";
}

@if (TempData["status"] != null)
{
    if (TempData["status"].ToString() == "ok")
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>SUCCESS!</strong> @TempData["msg"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>FAILED!</strong> @TempData["msg"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            <h5>Student</h5>
        </div>
        <div class="card-body">
            @Html.HiddenFor(model => model.s_id)
            <div class="row">
                <div class="col-md-3 col-12">
                    <div class="form-group">
                        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12 col-12">
                            @Html.EditorFor(model => model.s_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.s_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-12">
                    <div class="form-group">
                        @Html.Label("Age", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12 col-12">
                            @Html.EditorFor(model => model.s_Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.s_Age, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-12">
                    <div class="form-group">
                        @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12 col-12">
                            @Html.DropDownListFor(model => model.s_Address_id, new SelectList(@ViewBag.CityList, "Key", "Value"), "--Select Address--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.s_Address_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-12">
                    <div class="form-group">
                        @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12 col-12">
                            @Html.DropDownListFor(model => model.s_SubjectID, new SelectList(@ViewBag.SubjectList, "Key", "Value"), "--Select Subject--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.s_SubjectID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-end">
                @Html.HiddenFor(model => model.opsection)
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>

    <div class="card mt-2">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-sm w-100">
                    <thead class="table-dark">
                        <tr>
                            <th>S_Name</th>
                            <th>S_Age</th>
                            <th>S_Address</th>
                            <th>Subject_opted</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Students)
                        {
                            <tr>
                                <td>@item.s_name</td>
                                <td>@item.s_Age</td>
                                <td>@item.s_Address</td>
                                <td>@item.s_Subject</td>
                                <td><button type="button" onclick="GetStudent('@item.s_id')" class="btn btn-success btn-sm">Edit</button> | <button type="button" onclick="RemoveStudent('@item.s_id')" class="btn btn-danger btn-sm">Delete</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}


<script src="~/Scripts/ProjectScripts/Student.js"></script>